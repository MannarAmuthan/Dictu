/**
 * toString.du
 *
 * Testing the class.methods() and instance.methods() method
 *
 * .methods() returns the a list of all public methods attached to a class
 */

class Test {
    init() {}

    someOtherFunc() {}

    static someStaticFunc() {}

    private somePrivateFunc() {}
}

const expectedMethods = [
    "init",
    "someOtherFunc",
    "someStaticFunc"
];

assert(Test.methods().len() == 3);
expectedMethods.forEach(def (method) => {
    assert(Test.methods().contains(method));
});

assert(!Test.methods().contains("somePrivateFunc"));

/**
 * Test instance
 */
assert(Test().methods().len() == 3);
expectedMethods.forEach(def (method) => {
    assert(Test().methods().contains(method));
});

assert(!Test().methods().contains("somePrivateFunc"));

/**
 * Inheritance
 */

class AnotherTest < Test {
    anotherFunc() {}

    private anotherPrivateFunc() {}
}

const expectedMethodsInheritance = [
    "init",
    "someOtherFunc",
    "someStaticFunc",
    "anotherFunc"
];

assert(AnotherTest.methods().len() == 4);
expectedMethodsInheritance.forEach(def (method) => {
    assert(AnotherTest.methods().contains(method));
});

assert(!AnotherTest.methods().contains("somePrivateFunc"));

/**
 * Test instance
 */
assert(AnotherTest().methods().len() == 4);
expectedMethodsInheritance.forEach(def (method) => {
    assert(AnotherTest().methods().contains(method));
});

assert(!AnotherTest().methods().contains("somePrivateFunc"));